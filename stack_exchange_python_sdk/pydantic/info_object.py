# coding: utf-8

"""
    StackExchange

    Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from stack_exchange_python_sdk.pydantic.info_object_site import InfoObjectSite

class InfoObject(BaseModel):
    answers_per_minute: typing.Optional[typing.Union[int, float]] = Field(None, alias='answers_per_minute')

    api_revision: typing.Optional[str] = Field(None, alias='api_revision')

    badges_per_minute: typing.Optional[typing.Union[int, float]] = Field(None, alias='badges_per_minute')

    new_active_users: typing.Optional[int] = Field(None, alias='new_active_users')

    questions_per_minute: typing.Optional[typing.Union[int, float]] = Field(None, alias='questions_per_minute')

    site: typing.Optional[InfoObjectSite] = Field(None, alias='site')

    total_accepted: typing.Optional[int] = Field(None, alias='total_accepted')

    total_answers: typing.Optional[int] = Field(None, alias='total_answers')

    total_badges: typing.Optional[int] = Field(None, alias='total_badges')

    total_comments: typing.Optional[int] = Field(None, alias='total_comments')

    total_questions: typing.Optional[int] = Field(None, alias='total_questions')

    total_unanswered: typing.Optional[int] = Field(None, alias='total_unanswered')

    total_users: typing.Optional[int] = Field(None, alias='total_users')

    total_votes: typing.Optional[int] = Field(None, alias='total_votes')
    class Config:
        arbitrary_types_allowed = True
