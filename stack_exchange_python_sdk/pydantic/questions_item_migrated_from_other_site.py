# coding: utf-8

"""
    StackExchange

    Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from stack_exchange_python_sdk.pydantic.questions_item_migrated_from_other_site_aliases import QuestionsItemMigratedFromOtherSiteAliases
from stack_exchange_python_sdk.pydantic.questions_item_migrated_from_other_site_markdown_extensions import QuestionsItemMigratedFromOtherSiteMarkdownExtensions
from stack_exchange_python_sdk.pydantic.questions_item_migrated_from_other_site_related_sites import QuestionsItemMigratedFromOtherSiteRelatedSites
from stack_exchange_python_sdk.pydantic.questions_item_migrated_from_other_site_styling import QuestionsItemMigratedFromOtherSiteStyling

class QuestionsItemMigratedFromOtherSite(BaseModel):
    aliases: typing.Optional[QuestionsItemMigratedFromOtherSiteAliases] = Field(None, alias='aliases')

    api_site_parameter: typing.Optional[str] = Field(None, alias='api_site_parameter')

    audience: typing.Optional[str] = Field(None, alias='audience')

    closed_beta_date: typing.Optional[int] = Field(None, alias='closed_beta_date')

    favicon_url: typing.Optional[str] = Field(None, alias='favicon_url')

    high_resolution_icon_url: typing.Optional[str] = Field(None, alias='high_resolution_icon_url')

    icon_url: typing.Optional[str] = Field(None, alias='icon_url')

    launch_date: typing.Optional[int] = Field(None, alias='launch_date')

    logo_url: typing.Optional[str] = Field(None, alias='logo_url')

    markdown_extensions: typing.Optional[QuestionsItemMigratedFromOtherSiteMarkdownExtensions] = Field(None, alias='markdown_extensions')

    name: typing.Optional[str] = Field(None, alias='name')

    open_beta_date: typing.Optional[int] = Field(None, alias='open_beta_date')

    related_sites: typing.Optional[QuestionsItemMigratedFromOtherSiteRelatedSites] = Field(None, alias='related_sites')

    site_state: typing.Optional[str] = Field(None, alias='site_state')

    site_type: typing.Optional[str] = Field(None, alias='site_type')

    site_url: typing.Optional[str] = Field(None, alias='site_url')

    styling: typing.Optional[QuestionsItemMigratedFromOtherSiteStyling] = Field(None, alias='styling')

    twitter_account: typing.Optional[str] = Field(None, alias='twitter_account')
    class Config:
        arbitrary_types_allowed = True
