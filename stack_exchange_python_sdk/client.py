# coding: utf-8
"""
    StackExchange

    Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 

    The version of the OpenAPI document: 2.0
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from stack_exchange_python_sdk.client_custom import ClientCustom
from stack_exchange_python_sdk.configuration import Configuration
from stack_exchange_python_sdk.api_client import ApiClient
from stack_exchange_python_sdk.type_util import copy_signature
from stack_exchange_python_sdk.apis.tags.access_token_api import AccessTokenApi
from stack_exchange_python_sdk.apis.tags.answer_api import AnswerApi
from stack_exchange_python_sdk.apis.tags.associated_api import AssociatedApi
from stack_exchange_python_sdk.apis.tags.badge_api import BadgeApi
from stack_exchange_python_sdk.apis.tags.comment_api import CommentApi
from stack_exchange_python_sdk.apis.tags.edit_api import EditApi
from stack_exchange_python_sdk.apis.tags.error_api import ErrorApi
from stack_exchange_python_sdk.apis.tags.event_api import EventApi
from stack_exchange_python_sdk.apis.tags.favorite_api import FavoriteApi
from stack_exchange_python_sdk.apis.tags.filter_api import FilterApi
from stack_exchange_python_sdk.apis.tags.information_api import InformationApi
from stack_exchange_python_sdk.apis.tags.mention_api import MentionApi
from stack_exchange_python_sdk.apis.tags.merge_api import MergeApi
from stack_exchange_python_sdk.apis.tags.message_api import MessageApi
from stack_exchange_python_sdk.apis.tags.notification_api import NotificationApi
from stack_exchange_python_sdk.apis.tags.permission_api import PermissionApi
from stack_exchange_python_sdk.apis.tags.post_api import PostApi
from stack_exchange_python_sdk.apis.tags.privilege_api import PrivilegeApi
from stack_exchange_python_sdk.apis.tags.query_api import QueryApi
from stack_exchange_python_sdk.apis.tags.question_api import QuestionApi
from stack_exchange_python_sdk.apis.tags.reputation_api import ReputationApi
from stack_exchange_python_sdk.apis.tags.revision_api import RevisionApi
from stack_exchange_python_sdk.apis.tags.search_api import SearchApi
from stack_exchange_python_sdk.apis.tags.site_api import SiteApi
from stack_exchange_python_sdk.apis.tags.tag_api import TagApi
from stack_exchange_python_sdk.apis.tags.timeline_api import TimelineApi
from stack_exchange_python_sdk.apis.tags.user_api import UserApi



class StackExchange(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.access_token: AccessTokenApi = AccessTokenApi(api_client)
        self.answer: AnswerApi = AnswerApi(api_client)
        self.associated: AssociatedApi = AssociatedApi(api_client)
        self.badge: BadgeApi = BadgeApi(api_client)
        self.comment: CommentApi = CommentApi(api_client)
        self.edit: EditApi = EditApi(api_client)
        self.error: ErrorApi = ErrorApi(api_client)
        self.event: EventApi = EventApi(api_client)
        self.favorite: FavoriteApi = FavoriteApi(api_client)
        self.filter: FilterApi = FilterApi(api_client)
        self.information: InformationApi = InformationApi(api_client)
        self.mention: MentionApi = MentionApi(api_client)
        self.merge: MergeApi = MergeApi(api_client)
        self.message: MessageApi = MessageApi(api_client)
        self.notification: NotificationApi = NotificationApi(api_client)
        self.permission: PermissionApi = PermissionApi(api_client)
        self.post: PostApi = PostApi(api_client)
        self.privilege: PrivilegeApi = PrivilegeApi(api_client)
        self.query: QueryApi = QueryApi(api_client)
        self.question: QuestionApi = QuestionApi(api_client)
        self.reputation: ReputationApi = ReputationApi(api_client)
        self.revision: RevisionApi = RevisionApi(api_client)
        self.search: SearchApi = SearchApi(api_client)
        self.site: SiteApi = SiteApi(api_client)
        self.tag: TagApi = TagApi(api_client)
        self.timeline: TimelineApi = TimelineApi(api_client)
        self.user: UserApi = UserApi(api_client)
